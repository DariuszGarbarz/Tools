name: 'Release'

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        default: ubuntu-22.04
        type: string

jobs:
  publish:
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 10

    permissions:
      packages: write
      contents: read

    steps:
    - name: Prepare
      run: echo "NUGET_URL=https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" >> $GITHUB_ENV

    - id: lower-repo
      name: Repository to lowercase
      run: |
        echo "REPOSITORY_LOWERCASE=${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV
      
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.BLE_ACCESS_TOKEN }}
        submodules: true
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json

    - name: Add NuGet source
      run: |
        dotnet nuget add source "${{ env.NUGET_URL }}" \
          --username "${{ secrets.BLE_USERNAME }}" \
          --password "${{ secrets.BLE_ACCESS_TOKEN }}" \
          --store-password-in-clear-text \
          --name github

    - name: Restore dependencies
      run: dotnet restore .

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
    
    - name: Build
      run: dotnet build -c Release --property OutputPath=${{ github.workspace }}/Build --no-restore . -p:RepositoryUrl=${{ github.server_url }}/${{ github.repository }}
    
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal .

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ secrets.BLE_USERNAME }}
        password: ${{ secrets.BLE_ACCESS_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: |
          ghcr.io/${{ env.REPOSITORY_LOWERCASE }}:latest
          ghcr.io/${{ env.REPOSITORY_LOWERCASE }}:${{ env.GitVersion_SemVer }} 
        secrets: |
            token=${{ secrets.BLE_ACCESS_TOKEN }}

    - name: Zip artifacts
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'release.zip'
        directory: Build  

    - name: Tag the commit
      run: git tag -f v$GitVersion_SemVer

    - name: Push the tag
      run: git push -f --tags

    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "Build/*.zip"
        tag_name: v${{ env.GitVersion_SemVer }}
      env:
        GITHUB_TOKEN: ${{ secrets.BLE_USERNAME }}